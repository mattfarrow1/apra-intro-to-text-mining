{
  "hash": "4344243a57581ac95f8fdd5371755f28",
  "result": {
    "markdown": "---\ntitle: \"\\0\"\nformat: \n  revealjs:\n    css: style.css\n    preview-links: auto\n    filters: \n      - filter.lua\neditor: visual\ntitle-slide-attributes:\n    data-background-image: \"/materials/slide templates/Slide1.png\"\n    data-background-size: contain\n    data-background-opacity: \"1\"\nexecute:\n  freeze: auto\n---\n\n\n\n# Excel {background-image=\"/materials/slide templates/Slide3.png\" background-size=\"contain\"}\n\n## Excel Agenda\n\n-   Pros and Cons\n-   Formulas\n-   Using ChatGPT to help with formulas\n-   Keyword Search\n-   Word Count\n\n## Pros and Cons\n\n::: columns\n:::\n\n**Pros** - Universally available - Not going anywhere - Low barrier to entry - Scales in complexity\n\n:::\n\n:::\n\n**Cons** - Can be difficult to reproduce - Potentially destructive - Doesn't scale well - Limited options for text mining\n\n:::\n\n::::\n\n## Formula: vlookup\n\n=**VLOOKUP**(<font color=\"red\">Value to look up</font>, <font color=\"blue\">Range to look for value</font>, <font color=\"orange\">Column for the return value</font>, <font color=\"green\">Type of match</font>)\\\n=VLOOKUP(<font color=\"red\">A1</font>, <font color=\"blue\">Lookup!A1:B7</font>, <font color=\"orange\">2</font>, <font color=\"green\">TRUE</font>)\n\n## Formula: absolute/relative references\n\nRelative references **can** move.\n\nA1\n\nAbsolute references **can't** move.\n\n\\$A\\$1\n\n## Formula: absolute/relative references\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl <- tibble::tribble(\n~`$A$2`, ~`The column and the row do not change when copied.`,\n\"A$2\",\"The row does not change when copied.\",\n\"$A2\",\"The column does not change when copied.\"\n)\n\nkableExtra::kable_styling(knitr::kable(tbl), font_size = 24)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"font-size: 24px; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> $A$2 </th>\n   <th style=\"text-align:left;\"> The column and the row do not change when copied. </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> A$2 </td>\n   <td style=\"text-align:left;\"> The row does not change when copied. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> $A2 </td>\n   <td style=\"text-align:left;\"> The column does not change when copied. </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## Formula: countif\n\n=**COUNTIF**(<font color=\"red\">Where are we looking?</font>, <font color=\"blue\">What are we looking for?</font>)\n\n=COUNTIF(<font color=\"red\">A:A</font>, <font color=\"blue\">\"Washington\"</font>)\n\n## ChatGPT for Formula Help\n\n::: callout-warning\nAssume that everything you put into ChatGPT (or other LLMs) is public. Do not enter confidential or proprietary information into it.\n:::\n\nTell ChatGPT what is is you need assistance with:\n\n![](images/chatgpt-excel-1.png){fig-align=\"center\"}\n\n## ChatGPT for Formula Help\n\n![](images/chatgpt-excel-2.png){fig-align=\"center\"}\n\n## Formula: keyword search\n\nSource: ChatGPT\n\n=IF(SUMPRODUCT(--ISNUMBER(SEARCH(Keywords_Range, Cell)))\\>0, \"Found\", \"Not Found\")\n\n## Formula: keyword search\n\n=IF(SUMPRODUCT(--ISNUMBER(SEARCH(<font color=\"red\">Keywords_Range</font>, Cell)))\\>0, \"Found\", \"Not Found\")\n\n1.  Replace `Keywords_Range` with the actual range of keywords you want to search for. For example, if your keywords are in cells A1 to A10, the range would be `A1:A10`.\n\n## Formula: keyword search\n\n=IF(SUMPRODUCT(--ISNUMBER(SEARCH(Keywords_Range, <font color=\"red\">Cell</font>)))\\>0, \"Found\", \"Not Found\")\n\n2.  Replace `Cell` with the cell reference of the cell in the column you want to search. This is the cell where you want to check if any of the keywords are present. For example, if you want to search in column B, and the first cell is B2, you would use `B2` as the cell reference.\n\n## Formula: keyword search\n\nSource: ChatGPT\n\n=IF(SUMPRODUCT(--ISNUMBER(SEARCH(Keywords_Range, Cell)))\\>0, \"Found\", \"Not Found\")\n\n3.  Enter the formula in the cell where you want the search result to appear.\n\nThe formula will return \"Found\" if any of the keywords in the range are found in the specified cell, and \"Not Found\" if none of the keywords are found.\n\nNote: This formula is case-insensitive, so it will match keywords regardless of their case. If you want case-sensitive matching, you can use the `FIND` function instead of `SEARCH` in the formula.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}